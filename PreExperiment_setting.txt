実験前に確認すること

・Motiveと実験用PCのIPの確認
Motive : modeファイル：Connector_Natnet('☆');
実験用 : Connector_Natnet内のClientIP

・プロポのIP確認
251 or 252 : modeファイル

・リファレンスの確認
・THRUST2THROTTLE_DRONEにMPCのgain設定あり


Controller別の設定

〇MPC_HL
・controllerのリファレンス設定のコメントアウト/イン（95行目あたり）

〇MPC_Koopman
・観測量が読み込むモデルと同一か確認
Controller_MPC_Koopmanで読み込み

・入力制約を確認
なくしてもいいかもしれない


実験時
トリガーで接続確認
実験室座標系：前＝x方向正，左＝y方向正

実験
s, a, t, f, l, q

緊急時：q


実験時の危ない挙動
・上下の揺れがだんだん大きくなるとき　⇒　推力の制御が乱れてだいたい天井に突っ込む
・明らかに速度が速い時　：　一緒に実験するなら目標軌道の共有
・壁にぶつかりそうなとき
・なんかコマンドが通じないとき
・

★★
・MPCのパラメータは保存されないので注意。スクリーンショット等で保存する。



新たなブランチで実験するときに編集するファイル
=====実験自体に関すること=====
・mode/ExpMPC_Koopman.m
10行目あたり：motive = Connector_Natnet('粉砕のIP');
20行目あたり：プロポを無線に設定

・sample/Connector_Natnet.m
9行目あたり：ClientIP = '実験用PCのIP';

・reference/functions/Case_study_trajectory.m
目標軌道の変更

=====観測量設定に関すること（木山と同一ファイルを使うなら不必要）=====
・Koopman_Linearization/Koopman_Linear_by_Data/ObservableFunctions/quaternions_all.m
観測量を決める

・controller/change_equation.m
27行目あたり：Xc = quaternions(Param.current) を変更 quaternions -> quaternions_all

・model/substance/discrete_linear_model.m
14行目あたり：quaternions -> quaternions_all

-----任意-----
・controller/MPC_CONTROLLER_KOOPMAN_quadprog_experiment.m
tic/toc、fprintfをコメントアウト　⇒　余計な処理をなくして高速化
