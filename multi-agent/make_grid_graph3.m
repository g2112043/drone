function [W] = make_grid_graph3(nx,ny,meas,build,maxv)
% Make a graph for nx-ny grid with weight generated by gen
% gen(x,y) generates weight at (x,y)
%   high value means high possibility to burn
%   gen must work with matrix arguments,that is x or y possible to choose as
%   a matrix.
% maxv : max probability, 300m尺度で0.04が目安
% meas : map scale, mease=1なら1セル1m
% E : edge matrix : N-N size matrix where N = nx*ny
% eij : (i,j) element of E
% eij > 0 if edge exists from j to i else eij = 0
% W : weight matrix : nx-ny size matrix
arguments
    nx
    ny
    meas
    build
    maxv = 1
end
N = nx*ny;
mapsize = 3/meas;   %尺度計算に使う
mapdiameter = meas * 100;   %mainのmaptrueと同じ

%% 自動生成マップ
% shaperead Ver マップの読み込み
% S = shaperead('20160401-建築物の外周線.shp');
% S = shaperead('building_15216.dbf');

format long
if build == 0
    % 卒論手動マップ
    gen=0.01;
    A = zeros(nx,ny);
%     A = A + 0.00001;
    Wm = gen*10; Wmp = gen*10; Sm = gen*2; RCm = gen*0.5;
    %糸魚川市模擬マップ(3段階)
    %A area
    A(4:8,54)=Wm;A(5:8,55:56)=Wm;A(9,53:55)=Wm;A(10,49:55)=Wm;A(11,49:56)=Wm;A(12:18,49:55)=Wm;A(12,53)=0;A(19:20,52:54)=Wm;A(19:20,49:51)=Sm;A(21:27,49:54)=Wm;A(25:26,51)=0;A(28,49:50)=Wm;A(29:30,50)=Wm;A(28:30,52:54)=Wm;
    A(4:5,49)=Sm;A(4:5,50:52)=Wm;A(6:8,49:50)=Wm;A(6,51)=Wm;A(8:9,51)=Wm;A(6:9,52)=Wmp;A(4:8,53)=Wmp;
    %B area
    A(11,59)=Wm;A(14:17,57)=Wm;A(13:17,58)=Wm;A(12:17,59:62)=Wm;A(16,62)=0;A(18,59:64)=Wm;A(19,58:63)=Wm;A(20:21,57:64)=Wm;A(22:23,58:64)=Wm;A(24:25,57:60)=Wm;A(24:25,63:64)=Wm;A(26,57:59)=Wm;A(27,58:61)=Wm;A(25:27,62)=Wm;A(26:28,63)=Wm;A(28:30,56:59)=Wm;A(14:16,63:68)=RCm;A(15:16,69)=RCm;A(17:21,66:68)=RCm;A(22:23,66:67)=RCm;
    A(10:12,63)=Sm;A(8:12,64:69)=Sm;A(13,66:68)=Sm;A(6:8,58)=Sm;A(5:8,59)=Sm;A(10,58:59)=Wmp;A(5:10,60)=Wm;A(6:7,61)=Wm;A(8:10,61)=Sm;A(6:10,62)=Sm;
    %C area
    A(34:40,49:53)=Wm;A(36,49)=0;A(44:52,51:53)=Wm;A(43,52:53)=Wm;A(41,49:52)=Sm;A(42,49:53)=Sm;A(43:51,49:50)=RCm;A(34,55:61)=Wm;A(35,54:59)=Wm;A(36,55:58)=Wm;A(37,57:58)=Wm;A(35:36,60:63)=Wm;A(37,60:62)=Wm;A(38,60)=Wm;A(39,60:61)=Sm;A(38:39,62)=Wm;A(38:45,55:58)=Wm;A(41,60)=Wm;A(42,60:61)=Wm;A(43:45,59:60)=Wm;A(46:52,54:60)=Wm;A(48,54)=0;A(47,59)=0;
    A(44:51,64:66)=RCm;A(42:43,67)=Wm;A(36:43,68)=Wm;A(47:51,67:68)=Wm;A(40:51,69)=Wm;A(37:43,70)=Wm;A(48:51,70)=Wm;A(52,67:72)=Wm;A(35:39,71:72)=Wm;A(37,71)=0;A(35:38,73)=RCm;A(40:51,71:73)=Wm;   A(41:43,76:77)=Wm;A(42:43,78:82)=Wm;A(44:52,79:82)=Wm;
    A(41:43,76:77)=Wm;A(42:43,78:84)=Wm;A(44:50,79:84)=Wm;A(51:52,79:83)=Wm;A(46:52,85:88)=Wm;A(45,85:87)=Wm;A(46:47,89)=Wm;A(36:44,87)=Wm;A(36:42,88)=Wm;A(37:42,89:90)=Wm;A(35:40,77)=Wmp;A(35:36,78:79)=Wmp;A(36:37,80:82)=Wmp;A(38:40,78:82)=Wmp;A(36:40,83:84)=Sm;A(41:44,85:86)=RCm;
    %D area yet
    A(47:51,34:37)=Sm;   A(39:42,40:46)=Wm;A(40:41,43:44)=0;A(43:45,40:44)=Wm;A(45,41)=0;A(46:52,39:46)=Wm;A(47,43)=0;
    A(39:43,25:30)=Sm;A(44,24:30)=Sm;A(45:52,24:28)=Sm;A(45:52,29:30)=Wm;   A(33:36,26:28)=Wm;   A(33:35,37:40)=Wm;A(36,37)=Wm;A(36:37,39)=Wm;   A(38:40,32:33)=Wm;   A(33,43:45)=Wm;A(34,44:45)=Wm;A(35:37,45)=Sm;
    %E area yet
    A(56,31:37)=Wm;A(57:58,31:34)=Wm;A(59:61,31)=Wm;A(59:60,32)=Wm;A(61,33)=Wm;A(57:60,35)=Wm;A(57:61,36:39)=Wm;A(60,38)=0;A(62:63,31:37)=Wm;A(64,32:36)=Wm;A(65:66,31:37)=Wm;A(67,31:33)=Wm;A(68:69,32)=Wm;A(62:69,38)=Wm;A(64:69,39)=Wm;A(57:66,40)=Wm;A(66:68,41:42)=Wm;A(65:68,43:44)=Wm;A(64:68,45)=Wm;A(58:64,42:43)=Sm;A(56:63,45)=RCm;
    A(57:64,22:25)=Wm;A(60,24)=0;A(57:62,26)=Wm;A(59:62,27)=Wm;   A(66:67,22:24)=Wmp;A(67,25)=Wmp;A(68:69,25:26)=Wmp;A(68:69,22:24)=Wm;
    %F area yet
    A(72,38:39)=Wm;A(73:76,38:40)=Wm;A(75,39)=0;A(77:80,39:40)=Wm;A(80:83,37:38)=Wm;A(83,39)=Wm;A(84:86,40:41)=Wm;A(72,42:45)=Wm;A(73:74,43:45)=Wm;A(75:76,41:45)=Wm;A(77:84,42:45)=Wm;A(78:80,46)=Wm;A(82:83,46)=Wm;A(84,46)=RCm;A(85:86,43:46)=RCm;
    A(73:82,30:31)=Wm;A(76,31)=0;A(79,30)=0;A(72:73,32:33)=Wm;A(80:82,32)=Wm;A(81:83,33:34)=Wm;A(84,33:35)=RCm;A(85,30:34)=Wm;A(86,30:35)=Wm;A(83,35)=Wm;   A(76,33:34)=Wm;A(77,33:35)=Wm;   A(75:81,23:27)=Sm;A(84:85,23:26)=Wm;
    A(82:83,23:26)=Wmp;   A(82:85,28)=Wm;
    %G area
    A(97:98,29:35)=Wm;A(96,30:33)=Wm;A(95,30)=Wm;A(95,32:35)=Wm;A(94,33:35)=Wm;A(91:93,32)=Wm;A(90:93,33)=Wm;A(88:93,34)=Wm;A(88:91,35)=Wm;   A(93:98,27)=Wm;A(92:95,28)=Wm;A(98,26)=Wm;A(93:98,27)=Wm;   A(95:96,24)=Wm;
    A(89:94,37:38)=Wm;A(90:96,39)=Wm;A(95:96,40)=Wm;A(97:98,37:42)=Wm;A(91:96,41)=Wm;A(93:94,42)=Wm;A(89:96,43)=Sm;A(89:98,44:45)=Sm;A(89:92,46)=Sm;A(91:92,47)=Sm;A(96,46)=Sm;A(97,46:47)=Sm;A(98,46:48)=Sm;
    A(85,12:13)=Wmp;A(85,15:16)=Wmp;A(85,19:20)=Wmp;A(86:88,12:20)=Wmp;A(89:91,12:13)=Wm;A(89,15)=Wmp;A(89:90,17)=Wmp;A(89,18)=Wmp;   A(89:93,21)=Wmp;A(90:91,22:23)=Wmp;A(88:90,23:25)=Wmp;A(88:90,26)=Wm;A(88:91,27:28)=Wmp;A(92:94,24)=Wmp;A(95:96,24)=Wm;A(96:98,25)=Wmp;A(96:97,26)=Wmp;A(98,26)=Wm;A(93:98,27)=Wm;A(92:95,28)=Wm;A(92:93,26)=Wm;
    %H area yet
    A(88:90,49)=Wm;A(88:94,50)=Wm;A(94,51)=Wm;A(88:90,51)=Wm;A(87:97,52)=Wm;A(88:90,53)=Wm;A(96:98,53)=Wm;A(88:91,54)=Wm;A(93,54)=Wm;A(92:93,55)=Wm;   A(88:90,56)=Wm;A(88:91,57)=Wm;A(87:91,58)=Wm;   A(93,59)=Wm;   A(96:98,58:59)=RCm;   A(98,61:63)=Wm;A(97,61:64)=Wm;A(96,62:64)=Wm;
    A(87:89,62)=Wm;A(87:92,63:70)=Wm;A(93,63)=Wm;A(93:95,65)=Wm;A(93:94,69:70)=Wm;A(86,64:69)=Wm;A(85,66)=Wm;A(85,68:69)=Wm;A(88:92,71)=Wm;A(86:93,72)=Wm;A(85,71:72)=Wm;A(89:93,73)=Wm;
    %I area yet
    A(58:65,48:51)=RCm;   A(75:81,49)=Sm;A(74:81,50)=Sm;A(79:80,51)=Sm;A(82,50:55)=Wm;A(81,54:55)=Wm;A(82:83,56)=Wm;A(81:83,57)=Wm;A(84,53:55)=Wm;A(85,49:55)=Wm;  A(81:84,59)=Wm;A(81:83,60)=Wm;
    A(59:65,53)=Wm;A(56,53:61)=Wm;A(57,54:61)=Wm;A(58,55:60)=Wm;A(59,54:60)=Wm;A(60:61,54:61)=Wm;A(62,56:61)=Wm;A(63:65,55:61)=Wm;A(64,61)=0;A(66,55:61)=Wm;A(67:71,54:62)=Wm;A(69,54)=0;A(72,59:62)=Wm;A(68:76,64:67)=RCm;A(69:71,63)=Wm;A(74:75,59:63)=Wm;A(77:80,64:67)=Wm;A(81:83,65:66)=Wmp;   A(76:77,58)=Wm;
    A(57:62,63)=Sm;A(56:63,64:65)=Wmp;A(64:65,64)=Wmp;A(58:60,66:67)=Wmp;A(56:60,68)=Wmp;A(62:65,66)=Wmp;A(62:66,67)=Wmp;A(64:66,68:71)=Sm;A(67,69:72)=Sm;A(68:70,69:72)=Wm;A(71:72,69:71)=Wmp;   A(74:75,69:71)=Wmp;  A(77:79,69:72)=Wm;A(80,69:71)=Wmp;A(81,69:72)=Wmp;A(82,70:72)=Wmp;
    %J area
    A(57:58,76:78)=Wm;A(56:58,79)=Wm;A(56:59,80)=Wm;A(56:60,81)=Wm;A(59,77:79)=Sm;A(60:61,76:79)=Sm;A(61:62,79:81)=Sm;A(63:65,75:81)=Sm;A(66:69,80:81)=Sm;   A(57:61,83)=RCm;A(57:71,84:85)=RCm;A(56:66,85:86)=RCm;A(56:61,87)=RCm;A(56:64,88:89)=Wm;A(58,88)=0;A(66:71,87:88)=Sm;A(66:70,89)=Sm;
    A(71,74:75)=Wm;A(71:72,76:78)=Sm;A(73,74:78)=Wm;A(74:75,75:77)=Wm;A(75:76,74:75)=Wm;A(77:82,74:76)=Wm;A(79,75)=0;A(78:80,77:78)=Wmp;   A(71:72,80:81)=Wm;   A(74:75,80:82)=Wm;   A(79:80,81:82)=Wmp;   A(73,88:89)=Wmp;A(74,84:89)=Wmp;A(75:77,84:86)=Wmp;A(76,87:88)=Wmp;A(78:80,84:88)=Wmp;
    A(86:88,75:77)=Wmp;A(85,76:77)=Wmp;A(83:87,78:79)=Wm;A(83:86,80)=Wm;A(84:86,81)=Wmp;A(83:89,82:83)=Wmp;A(85,84)=Wmp;   A(90,79)=Wm;
    
    %A' area
    A(3:4,35:41)=Wm;A(4:10,39:45)=Wm;A(5,40)=0;A(9,39)=0;A(7:9,34:35)=Wmp;A(5:9,36)=Wm;A(5:10,37)=Wm;A(5:7,38)=Wm;A(10,38)=RCm;   A(15:16,30:33)=Wm;A(14,30:38)=Wmp;A(13,32:34)=Wmp;A(13,37:38)=Wmp;A(15,35:38)=Wmp;A(16,38)=Wmp;A(12:15,39:45)=Wm;A(14,42)=0;   A(18,35:37)=Wm;A(19,36:37)=Wm;   A(17:20,40:43)=Sm;   A(27:29,25)=Wm;A(26:29,26)=Wm;
    A(19,30:31)=Wm;A(20:21,29:33)=Wm;A(22,29:35)=Wm;A(23:24,29:38)=Wm;A(25,30:38)=Wm;A(26,36:38)=Wm;A(27,35:37)=Wm;A(28:29,34:38)=Wm;   A(25:29,40)=RCm;   A(22,40:45)=Wm;A(23,40:45)=Sm;A(24,42:45)=Sm;A(25:26,42:45)=Wm;A(27:28,42:45)=Wmp;A(29,42:45)=Wm;
    %B' area
    A(8,74:77)=Wmp;A(9:11,73:76)=Wmp;A(12,74)=Wmp;A(13,72:74)=Wmp;A(14,71:74)=Wm;A(15,70:74)=Wm;A(16,72:74)=Wm;A(17:18,70:74)=Wm;A(12:19,75)=Wm;A(12:14,76)=Wm;   A(21:22,70:71)=RCm;A(21:23,72:74)=Wmp;A(23:25,69:71)=Wm;A(24:25,72:74)=Wm;A(26,70:71)=Wmp;A(27,69:71)=Wmp;A(28,69:70)=Wmp;A(27:30,72:73)=Wm;A(27,74)=Wm;
    
    A(4,53:54)=Wm;A(5:7,53:55)=Wm;A(8,52:55)=Wm;A(9,52:54)=Wm;A(10,49:55)=Wm;A(11,49:56)=Wm;A(12:18,49:55)=Wm;A(12,53)=0;A(19:20,52:54)=Wm;A(19:20,49:51)=Sm;A(21:27,49:54)=Wm;A(25:26,51)=0;A(28,49:50)=Wm;A(29:30,50)=Wm;A(28:30,52:54)=Wm;
    A(11,59)=Wm;A(14:17,57)=Wm;A(13:17,58)=Wm;A(12:17,59:62)=Wm;A(16,62)=0;A(18,59:64)=Wm;A(19,58:63)=Wm;A(20:21,57:64)=Wm;A(22:23,58:64)=Wm;A(24:25,58:60)=Wm;A(24:25,63:64)=Wm;A(26,57:59)=Wm;A(27,58:61)=Wm;A(25:27,62)=Wm;A(26:28,63)=Wm;A(28:30,56:59)=Wm;A(14:16,63:68)=RCm;A(15:16,69)=RCm;A(17:21,66:68)=RCm;A(22:23,66:67)=RCm;
    A(34:40,49:53)=Wm;A(36,49)=0;A(44:52,51:53)=Wm;A(43,52:53)=Wm;A(41,49:52)=Sm;A(42,49:53)=Sm;A(43:51,49:50)=RCm;A(34,55:61)=Wm;A(35,54:59)=Wm;A(36,55:58)=Wm;A(37,57:58)=Wm;A(35:36,60:63)=Wm;A(37,60:62)=Wm;A(38,60)=Wm;A(39,60:61)=Sm;A(38:39,62)=Wm;A(38:45,55:58)=Wm;A(41,60)=Wm;A(42,60:61)=Wm;A(43:45,59:60)=Wm;A(46:52,54:60)=Wm;A(48,54)=0;A(47,59)=0;
    A(47:51,34:37)=Sm;  A(39:42,40:46)=Wm;A(40:41,43:44)=0;A(43:45,40:44)=Wm;A(45,41)=0;A(46:52,39:46)=Wm;A(47,43)=0;
    A(44:51,64:66)=RCm;A(42:43,67)=Wm;A(36:43,68)=Wm;A(47:51,67:68)=Wm;A(40:51,69)=Wm;A(37:43,70)=Wm;A(48:51,70)=Wm;A(52,67:72)=Wm;A(35:39,71:72)=Wm;A(37,71)=0;A(35:38,73)=RCm;A(40:51,71:73)=Wm;   A(41:43,76:77)=Wm;A(42:43,78:82)=Wm;A(44:52,79:82)=Wm;
    A(56,31:37)=Wm;A(57:58,31:34)=Wm;A(59:61,31)=Wm;A(59:60,32)=Wm;A(61,33)=Wm;A(57:60,35)=Wm;A(57:61,36:39)=Wm;A(60,38)=0;A(62:63,31:37)=Wm;A(64,32:36)=Wm;A(65:66,31:37)=Wm;A(67,31:33)=Wm;A(68:69,32)=Wm;A(62:69,38)=Wm;A(64:69,39)=Wm;A(57:66,40)=Wm;A(66:68,41:42)=Wm;A(65:68,43:44)=Wm;A(64:68,45)=Wm;A(58:64,42:43)=Sm;A(56:63,45)=RCm;
    
    A(130,130)=0.08;
    W = sparse(A);

    maxW = max(W,[],'all');
    if maxW > 1 | maxv~=1
        W = (maxv*W/maxW);
    end
    return
    elseif build == 1
    addpath('C:\Users\tobit\OneDrive - 東京都市大学 Tokyo City University\高機能研2023\修士研究_2023\プログラム_2023(継続)\基本プログラム\multi-agent\shape_share20221014')
    S = shaperead('building_13112.shp');
    % wooden_flaが1で木造、0で非木造と判定
    xx = []; yy = []; mapnum = 1; woodnum = 1;
    % 非木造のみのマップ
    for i = 1:length(S)
        if S(i).wooden_fla == 0
            xx = cat(2,xx,[S(i).X]);
            yy = cat(2,yy,[S(i).Y]);
            mapnum = mapnum + 1;
        else
            woodnum = woodnum + 1;
        end
    end
    xxm = min(xx);
    yym = min(yy);
    elseif build == 2
        addpath('C:\Users\tobit\OneDrive - 東京都市大学 Tokyo City University\高機能研2023\修士研究_2023\プログラム_2023(継続)\分析\周作\20160401')
        S = shaperead('20160401-建築物の外周線.shp');
    else
    disp("buildの設定が不適切です")
end

% 建築物全てのマップ
x = [S.X];
y = [S.Y];
xm = min(x);
ym = min(y);
format long


% 改良部分 探索項
% 建物誤認識の解決策
% 同一値を探索し合体する
% [1 2 3 NaN],[3 4 NaN] => [1 2 3 4 NaN]
% ここではデータ群の頭としっぽが繋がるデータを探査
clear a b zero
zero = 0;
for i = 1:length(S)
    lenSiX = length(S(i).X);
    deld = 0;
    for j = 1:lenSiX-1
        if length(find(S(i).X(j) == x)) >= 2 && S(i).X(1) ~= S(i).X(lenSiX-1)
            %x中に同じデータが2つある && 同一データ群S(n).X内ではない
            %上記の条件を満たす=データの統合が必要なデータ群
            deld = deld + 1;
            if deld >= 2    %Map範囲縁の建物の削除（不完全）
                zero = zero + 1;
                a(zero) = i;    %(1,...,NaN)が他と結合できるするデータ群ナンバーS(i).Xで参照可能
                b(zero) = j;    %接続先の最終項（[a b ... z NaN]のz）
            end
        end
    end
end
point = zero;  %fusion pointがいくつあるか

if  point ~= 0
    % 改良部分 合体項
    % ここでは探査結果a,bを用いてデータ群を結合
    % このとき余ったほうは[0 NaN]にひとまず置換
    for i = 1:length(a)
        for j = 1:length(b)
            if S(a(i)).X(end-1) == S(a(j)).X(1) && i ~= j
                A = S(a(i)).X;
                A(:,end-1:end) = [];
                S(a(j)).X = [A S(a(j)).X];  %x成分のデータ接続
                B = S(a(i)).Y;
                B(:,end-1:end) = [];
                S(a(j)).Y = [B S(a(j)).Y];  %y成分のデータ接続
                S(a(i)).X = zeros(1,2); %ここから下で重複する部分を[0 NaN]に置換
                S(a(i)).Y = zeros(1,2);
                S(a(i)).X(1) = xm;   % 後で引いた時に0になるように0ではなくxmに
                S(a(i)).Y(1) = ym; 
                S(a(i)).X(end) =NaN;
                S(a(i)).Y(end) =NaN;
            end
        end
    end
    
    % 改良部分 削除項
    % S(n).X = [0 NaN]の部分を削除
    nan = 0;    %Sの中で消されたデータの数
    for i = 1:length(a)
        if S(a(i)).X(1) == xm && length(S(a(i)).X) == 2
            S(a(i)).X = [];
            S(a(i)).Y = [];
            nan = nan + 1;
        end
    end

else
    disp("破損したGISデータは存在しませんでした")
end

% 建物のラベリング
label = zeros(length(S),3);
for i = 1:length(S)
    if ~isempty(S(i).X) %意味：length(S(i).X) ~= 0
        labelseed = S(i).X;
        lablend = length(labelseed);
        labelseed(lablend) = [];
        labelseed(lablend-1) = [];
        label(i,1) = mean(labelseed);

        labelseed = S(i).Y;
        labelseed(lablend) = [];
        labelseed(lablend-1) = [];
        label(i,2) = mean(labelseed);
    elseif isempty(S(i).X)
        label(i,1) = xm;
        label(i,2) = ym;
    end
    label(i,3) = i;
end

% 範囲調整したマップの出力項
if xm>0
    x = x - abs(xm);
else
    x = x + abs(xm);
end
if ym>0
    y = y - abs(ym);
else
    y = y + abs(ym);
end
if build == 1
    if xxm>0
        xx = xx - abs(xxm);
    else
        xx = xx + abs(xxm);
    end
    if yym>0
        yy = yy - abs(yym);
    else
        yy = yy + abs(yym);
    end
end

% 行列生成 範囲絞り機能付きVer
% NaNは区切りを意味する。値が入ってない
if build == 1
    % 経度(横・x軸方向) 1㎞ = 0.010966404715491394度
    % 緯度(縦・y軸方向) 1㎞ = 0.0090133729745762度
    x = (1000 * x)/0.011;   % 経度のm変換
    y = (1000 * y)/0.0099;  % 緯度のm変換
    xx = (1000 * xx)/0.011;   % 経度のm変換
    yy = (1000 * yy)/0.0099;  % 緯度のm変換
    scal = 500 - mapdiameter;

    xslide = 6000 + scal;      %世田谷全体(by秋山データ)
    yslide = 500 + scal;       %世田谷全体(by秋山データ)
    if xslide + mapdiameter > max(x) || yslide + mapdiameter > max(y)
        disp("slide量またはnxが大きすぎます");
    end
elseif build == 0
    xslide = 700;   %700
    yslide = 235;   %150
    if xslide + nx > max(x) || yslide + ny > max(y)
        disp("slide量またはnxが大きすぎます");
    end
else
    disp("buildの設定が不適切です")
end
disp("マップのベクトル化が完了しました");

[xq,yq] = meshgrid(1:meas:nx*meas);
xq = xq + xslide;
yq = yq + yslide;
in = inpolygon(xq,yq,x,y);
in = logical(in);
in2 = 0;
if build == 1
    in2 = inpolygon(xq,yq,xx,yy);
    in2 = logical(in2);
end
A = in - (in2*4)/5;
W = A;
disp("マップの重み行列化が完了しました");


W = sparse(A);    %スパース化による軽量化

%% 
maxW = max(W,[],'all');
if maxW > 1 | maxv~=1
    W = (maxv*W/maxW);
end
end

